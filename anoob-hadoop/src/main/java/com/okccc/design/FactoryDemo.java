package com.okccc.design;

/**
 * @Author: okccc
 * @Date: 2021/7/13 下午8:43
 * @Desc: java工厂模式
 *
 * GoF(Gang of Four)：1995年由四个人出版的书里收录了23种设计模式,人称GoF设计模式
 * 设计模式是对程序设计中普遍存在的问题提出的解决方案,核心思想就是低耦合高内聚面向接口编程
 *
 * 设计模式七大原则
 * 单一职责原则: 一个类只负责一项职责,降低类的复杂度,提高可维护性
 * 接口隔离原则: 一个类对另一个类的依赖应该建立在最小的接口上
 * 依赖倒转原则: 抽象不应该依赖细节,而是细节依赖抽象,本质上是面向接口编程
 * 里氏替换原则: 继承时尽量不要重写父类方法,继承实际上增加了两个类的耦合性,可以通过聚合/组合/依赖解决问题
 * 开闭原则OCP: 对方法开放扩展功能封闭已有功能
 * 迪米特法则: 也叫最少知道原则,即一个类对自己依赖的类知道的越少越好,只与直接朋友通信,降低耦合度
 * 合成复用原则: 尽量使用聚合/组合/依赖方式,而不使用继承
 *
 * 设计模式三种类型
 * 创建型: 单例模式、工厂模式、抽象工厂模式、构造者模式、原型模式
 * 结构型: 装饰模式、代理模式、适配器模式、桥接模式、组合模式、外观模式、享元模式
 * 行为型: 观察者模式、中介者模式、解释器模式、迭代器模式、访问者模式、备忘录模式、状态模式、策略模式、责任链模式、命令模式、模板方法模式
 */
public class FactoryDemo {
    public static void main(String[] args) {
        /*
         * 工厂方法模式：代替new创建复杂对象,定义创建对象的接口,由子类自己决定实例化哪一个工厂类
         * 抽象工厂模式：是其它工厂的超级工厂,工厂模式创建一个对象,抽象工厂模式创建一组对象
         */
    }
}