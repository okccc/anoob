package arrays;

public class ArrayDemo {
    public static void main(String[] args) {
        /**
         * java程序运行时要在内存中分配空间,为了提高效率对空间划分了不同区域,每片区域的数据处理方式不一样
         * jvm内存结构
         * 栈：每个线程包含一个栈区,用于存放基本类型的变量(int,long,double..)和对象的引用,栈区中的数据是私有的别的栈不能访问
         *    方法执行结束系统会自动释放内存,生命周期短运行速度快
         * 堆：jvm只有一个堆区,用于存放new创建的对象和数组,堆区被所有线程共享
         *    垃圾回收器会不定时查看这个对象,如果没有引用指向该对象就回收,生命周期不确定运行速度慢(因为堆区是动态分配内存大小)
         * 方法区：jvm只有一个方法区,用于存放类、静态变量、全局变量等持久不变的数据,方法区被所有线程共享
         */

        // 元素类型[] 数组名 = new 元素类型[元素个数或数组长度];

        // 格式一：需要一个容器,但是不明确具体元素
//        int[] arr = new int[3];
//        arr[0] = 22;
//        System.out.println(arr[0]);

        // 格式二：需要一个容器,存储已知的具体数据
        // int[] arr = new int[] {12,23,34,45,56};
        int[] arr = {12,23,34,45,56};
        // 打印引用变量arr在堆内存中指向的实体的地址值
        System.out.println(arr);  // [I@c17164    @后面是十进制的地址值,前面[表示数组,I表示元素是int类型
        // 遍历数组
        for (int i : arr) {
            System.out.println(i);
        }
    }

}
